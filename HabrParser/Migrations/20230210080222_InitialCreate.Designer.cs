// <auto-generated />
using System;
using HabrParser.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HabrParser.Migrations
{
    [DbContext(typeof(ArticlesDBContext))]
    [Migration("20230210080222_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArticleHub", b =>
                {
                    b.Property<Guid>("ArticlesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HubsId")
                        .HasColumnType("int");

                    b.HasKey("ArticlesId", "HubsId");

                    b.HasIndex("HubsId");

                    b.ToTable("ArticleHub");
                });

            modelBuilder.Entity("ArticleTag", b =>
                {
                    b.Property<Guid>("ArticlesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.HasKey("ArticlesId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("ArticleTag");
                });

            modelBuilder.Entity("HabrParser.Models.APIArticles.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<bool>("CommentsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LeadDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MetaDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatisticsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TextHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("TimePublished")
                        .IsRequired()
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hubrId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LeadDataId")
                        .IsUnique();

                    b.HasIndex("MetaDataId")
                        .IsUnique();

                    b.HasIndex("StatisticsId")
                        .IsUnique();

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("HabrParser.Models.APIArticles.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rating")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hubrId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NickName");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("HabrParser.Models.APIArticles.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("HabrParser.Models.APIArticles.Hub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hubrId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Title");

                    b.ToTable("Hubs");
                });

            modelBuilder.Entity("HabrParser.Models.APIArticles.LeadData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LeadData");
                });

            modelBuilder.Entity("HabrParser.Models.APIArticles.Metadata", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Amp")
                        .HasColumnType("bit");

                    b.Property<string>("CustomTrackerLinks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchemaJsonLd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScriptUrls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShareImageHeight")
                        .HasColumnType("int");

                    b.Property<string>("ShareImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShareImageWidth")
                        .HasColumnType("int");

                    b.Property<string>("StylesUrls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VKShareImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Metadata");
                });

            modelBuilder.Entity("HabrParser.Models.APIArticles.ParserResult", b =>
                {
                    b.Property<int>("ParserResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParserResultId"));

                    b.Property<int>("LastArticleId")
                        .HasColumnType("int");

                    b.Property<int>("LastArticleId1")
                        .HasColumnType("int");

                    b.Property<int>("LastArticleId100")
                        .HasColumnType("int");

                    b.Property<int>("LastArticleId150")
                        .HasColumnType("int");

                    b.Property<int>("LastArticleId200")
                        .HasColumnType("int");

                    b.Property<int>("LastArticleId250")
                        .HasColumnType("int");

                    b.Property<int>("LastArticleId300")
                        .HasColumnType("int");

                    b.Property<int>("LastArticleId350")
                        .HasColumnType("int");

                    b.Property<int>("LastArticleId400")
                        .HasColumnType("int");

                    b.Property<int>("LastArticleId450")
                        .HasColumnType("int");

                    b.Property<int>("LastArticleId50")
                        .HasColumnType("int");

                    b.Property<int>("LastArticleId500")
                        .HasColumnType("int");

                    b.Property<int>("LastArticleId550")
                        .HasColumnType("int");

                    b.Property<int>("LastArticleId600")
                        .HasColumnType("int");

                    b.Property<int>("LastArticleId650")
                        .HasColumnType("int");

                    b.Property<int>("LastArticleId700")
                        .HasColumnType("int");

                    b.HasKey("ParserResultId");

                    b.ToTable("ParserResult");
                });

            modelBuilder.Entity("HabrParser.Models.APIArticles.Statistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CommentsCount")
                        .HasColumnType("int");

                    b.Property<int>("FavoritesCount")
                        .HasColumnType("int");

                    b.Property<int>("ReadingCount")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("VotesCount")
                        .HasColumnType("int");

                    b.Property<int>("VotesCountMinus")
                        .HasColumnType("int");

                    b.Property<int>("VotesCountPlus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("HabrParser.Models.APIArticles.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TagName");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("ArticleHub", b =>
                {
                    b.HasOne("HabrParser.Models.APIArticles.Article", null)
                        .WithMany()
                        .HasForeignKey("ArticlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HabrParser.Models.APIArticles.Hub", null)
                        .WithMany()
                        .HasForeignKey("HubsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArticleTag", b =>
                {
                    b.HasOne("HabrParser.Models.APIArticles.Article", null)
                        .WithMany()
                        .HasForeignKey("ArticlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HabrParser.Models.APIArticles.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HabrParser.Models.APIArticles.Article", b =>
                {
                    b.HasOne("HabrParser.Models.APIArticles.Author", "Author")
                        .WithMany("Articles")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HabrParser.Models.APIArticles.LeadData", "LeadData")
                        .WithOne("Article")
                        .HasForeignKey("HabrParser.Models.APIArticles.Article", "LeadDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HabrParser.Models.APIArticles.Metadata", "MetaData")
                        .WithOne("Article")
                        .HasForeignKey("HabrParser.Models.APIArticles.Article", "MetaDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HabrParser.Models.APIArticles.Statistics", "Statistics")
                        .WithOne("Article")
                        .HasForeignKey("HabrParser.Models.APIArticles.Article", "StatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("LeadData");

                    b.Navigation("MetaData");

                    b.Navigation("Statistics");
                });

            modelBuilder.Entity("HabrParser.Models.APIArticles.Contact", b =>
                {
                    b.HasOne("HabrParser.Models.APIArticles.Author", "Author")
                        .WithMany("Contacts")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("HabrParser.Models.APIArticles.Author", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("HabrParser.Models.APIArticles.LeadData", b =>
                {
                    b.Navigation("Article")
                        .IsRequired();
                });

            modelBuilder.Entity("HabrParser.Models.APIArticles.Metadata", b =>
                {
                    b.Navigation("Article")
                        .IsRequired();
                });

            modelBuilder.Entity("HabrParser.Models.APIArticles.Statistics", b =>
                {
                    b.Navigation("Article")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
